{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setmovies","trailer","settrailer","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.167d6c05.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios.js\";\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"http://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setmovies] = useState([]);\r\n  const [trailer, settrailer] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n\r\n      setmovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = (movie) => {\r\n    if (trailer) {\r\n      settrailer(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          settrailer(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row_posterLarge\"}`}\r\n            src={`${base_url}.${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailer && <Youtube videoId={trailer} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY=\"3de442dccc2e4d6257f0b7e01dfde920\";\r\n\r\n\r\n\r\nconst requests={\r\n\r\nfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n\r\n\r\nfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n\r\nfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n\r\nfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n\r\nfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n\r\nfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n\r\nfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n\r\nfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n\r\n}\r\n\r\n\r\n\r\nexport default requests;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n  // function\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"banner__buttons\">\r\n        <button className=\"banner_button\">Play</button>\r\n\r\n        <button className=\"banner_button\">My list</button>\r\n      </div>\r\n\r\n      <h1 className=\"banner__description\">{movie?.overview}</h1>\r\n\r\n      <div className=\"banner__fadebottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","\nimport React from 'react';\nimport './App.css';\nimport Row from './Row.js';\nimport requests from './requests.js'\nimport Banner from './Banner.js';\nimport Nav from './Nav.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n    <Banner />\n     <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals}\n     \n     isLargeRow={true}/>\n     <Row title=\"Tranding now\" fetchUrl={requests.fetchTopRated}/>\n     <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n\n     <Row title=\"Comedy Movies \" fetchUrl={requests.fetchComedyMovies}/>\n     \n     <Row title=\"Horror Movies \" fetchUrl={requests.fetchHorrorMovies}/>\n\n     <Row title=\"Romance Movies \" fetchUrl={requests.fetchRomanceMovies}/>\n\n     <Row title=\"Documanteries\" fetchUrl={requests.fetchDocumentaries}/>\n     \n     \n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}